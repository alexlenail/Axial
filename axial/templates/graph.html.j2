{% extends 'base.html.j2' %}

{% block head %}
<title>{{ title }}</title>

{% endblock %}

{% block content %}

<div class="row flex-nowrap">
    <div class="col-md-4 col-12 menu">
        <div class="card">
            <div class="card-header">
                <a class="pull-right" role="button"><i class="fa" id="hide-show"></i></a>
                <h1><a href="index.html" class="link-unstyled">{{ title }}</a></h1>
                <p><a id="download" href="#">Download SVG</a></p>

                <nav>
                    <div class="nav nav-tabs card-header-tabs" role="tablist">
                        <a data-toggle="tab" role="tab" class="nav-item nav-link active" href="#structure">Structure</a>
                    </div>
                </nav>

            </div>
            <div class="tab-content">

                <div class="tab-pane card-body fade show active" id="structure" role="tabpanel">

                    <input type="text" class="input" id="search_for_node" list="nodes" placeholder="search..." />
                        <datalist id="nodes">
                            {% for node in nodes %}<option value="{{node}}">{{node}}</option>{% endfor %}
                        </datalist>

                    <label><input type="checkbox" id="show_only_solution_edges" name="show_only_solution_edges">Only show PCSF solution edges</label>

                    <label><input type="checkbox" id="force" name="force" value="force" checked>Force Simulation</label>

                    <label><input type="range" id="repulsion_strength" min="10" max="800" step="1" value="100">Force</label>
                    <label><input type="range" id="edge_opacity" min="0" max="1" step="0.01" value="0.6">Opacity</label>

                    <label><select id="groupBy"><option value="" selected>None</option></select>Group nodes by</label>
                    <label><select id="shapeBy"><option value="" selected>None</option></select>Shape nodes by</label>
                    <label><select id="colorBy"><option value="" selected>None</option></select>Color nodes by</label>

                    <label><select id="colorScheme"><option value="" selected>None</option></select>Color Schemes</label>

                    <label>âŒ˜+Click a node to open GeneCards</label>

                </div>

            </div>
        </div>
    </div>

    <div id="graph-container" class="col-md col-12"></div>

</div>

{% endblock %}

{% block scripts %}

{{ scripts_block }}

<script>


g = Graph(graph);

g.render();
g.style();

continuous = g.continuous_attrs()
categorical = g.categorical_attrs()

$("#colorBy").append(continuous.map(attr => `<option value="${attr}">${attr}</option>`)
            .concat(categorical.map(attr => `<option value="${attr}">${attr}</option>`)));
$("#shapeBy").append(categorical.map(attr => `<option value="${attr}">${attr}</option>`));
$("#groupBy").append(categorical.map(attr => `<option value="${attr}">${attr}</option>`));



/////////////////////////////////////////////////////////////////////////////
                ///////    Additional Features    ///////
/////////////////////////////////////////////////////////////////////////////

$("#search_for_node").on('input', function () {
    var val = this.value;
    if ($('#nodes').find('option').filter(function() {
        return this.value.toUpperCase() === val.toUpperCase();
    }).length) {
        set_focus(d3.select("#"+this.value)._groups[0][0].__data__);  // TODO: fix this BS
        set_highlight(d3.select("#"+this.value)._groups[0][0].__data__);  // TODO: fix this BS
    }
    else { remove_focus(); remove_highlight(); }
});

$("#show_only_solution_edges").change( () => g.render({'show_only_solution_edges_': this.checked}));
$("#turnForceOff").change(             () => g.render({'turnForceOff_': this.checked}));
$("#repulsion_strength").change(       () => g.render({'repulsion_strength_': this.value}));
$("#groupBy").change(                  () => g.render({'group_by_': this.value}));
$("#shapeBy").change(                  () => g.render({'shape_by_': this.value}));
$("#colorBy").change(                  () => g.style({'color_by_': this.value}));
$("#edge_opacity").change(             () => g.style({'edge_opacity_': this.value}));


/////////////////////////////////////////////////////////////////////////////
                      ///////    Download    ///////
/////////////////////////////////////////////////////////////////////////////

d3.select("#download").on("click", function() {
    d3.select(this)
      .attr("href", 'data:application/octet-stream;base64,' + btoa(unescape(encodeURIComponent(d3.select("#graph-container").html()))))
      .attr("download", "interactome.svg")
})

</script>

{% endblock %}


